#include<iostream>
using namespace std;

class bike{
	public:
		virtual void start() = 0;
		virtual void stop() = 0;
};
/*
This is pure virtual function and the class having this pure virtual 
function is called abstract class.
*/	
class bulletbike:public bike{
	public:
		void start(){
			cout<<"bulletbike started."<<endl;
		}
		void stop(){
			cout<<"bulletbike stopped."<<endl;
		}
};

class pulsarbike:public bike{
	public:
		void start(){
			cout<<"pulsarbike started."<<endl;
		}
		void stop(){
			cout<<"pulsarbike stopped."<<endl;
		}
};

class dukebike:public bike{
	public:
		void start(){
			cout<<"Dukebike started."<<endl;
		}
		void stop(){
			cout<<"Dukebike stopped."<<endl;
		}
};


int main(){
	
	bike *b;
	b = new pulsarbike;
	b->start();
	b->stop();

	return 0;
}
